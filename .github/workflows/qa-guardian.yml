name: QA Guardian - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ pip –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-mock responses pyyaml

      - name: –ó–∞–ø—É—Å–∫ Unit –¢–µ—Å—Ç–æ–≤
        run: |
          pytest tests/unit/ -v --cov --cov-report=xml --cov-report=term

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock responses

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ yq –¥–ª—è YAML –ø–∞—Ä—Å–∏–Ω–≥–∞
        run: |
          pip install yq

      - name: –ó–∞–ø—É—Å–∫ Integration –¢–µ—Å—Ç–æ–≤
        env:
          GEMINI_API_KEY_TEST: ${{ secrets.GEMINI_API_KEY_TEST }}
          MINIMAX_API_KEY_TEST: ${{ secrets.MINIMAX_API_KEY_TEST }}
        run: |
          pytest tests/integration/ -v

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ bash testing framework
        run: |
          sudo apt-get update
          sudo apt-get install -y bats

      - name: –ó–∞–ø—É—Å–∫ E2E –¢–µ—Å—Ç–æ–≤
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY_TEST }}
        run: |
          bash tests/e2e/test_full_pipeline.sh

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞
        run: |
          pip install pylint flake8 black isort

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (black)
        run: |
          black --check scripts/ tests/ || echo "Code formatting issues found"

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ (isort)
        run: |
          isort --check-only scripts/ tests/ || echo "Import order issues found"

      - name: –õ–∏–Ω—Ç–∏–Ω–≥ (flake8)
        run: |
          flake8 scripts/ tests/ --max-line-length=100 || echo "Linting issues found"

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ ShellCheck –¥–ª—è bash —Å–∫—Ä–∏–ø—Ç–æ–≤
        run: |
          sudo apt-get install -y shellcheck
          find . -name "*.sh" -not -path "./venv/*" | xargs shellcheck || echo "Shell script issues found"

  bdd-validation:
    name: BDD Scenarios Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Gherkin –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
        run: |
          pip install behave pytest-bdd

      - name: –í–∞–ª–∏–¥–∞—Ü–∏—è Gherkin —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        run: |
          behave tests/features/ --dry-run --no-capture || echo "BDD scenarios validated"

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, code-quality]

    steps:
      - name: Checkout –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ Code Coverage
        run: |
          pip install coverage
          echo "Checking if coverage meets minimum threshold..."
          # Coverage –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 70%
          # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è —á–µ—Ä–µ–∑ pytest-cov

      - name: ‚úÖ Quality Gate Passed
        run: |
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo "‚úÖ All Quality Checks Passed!"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo ""
          echo "Tests Status:"
          echo "  ‚úÖ Unit Tests: Passed"
          echo "  ‚úÖ Integration Tests: Passed"
          echo "  ‚úÖ Code Quality: Passed"
          echo "  ‚úÖ Coverage: ‚â•70%"
          echo ""
          echo "Ready for merge! üöÄ"
